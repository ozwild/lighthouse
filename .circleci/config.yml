# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.1-stretch-node-browsers
        environment:
          APP_ENV: Testing
          DB_CONNECTION: sqlite

    working_directory: ~/laravel

    steps:
      - checkout

      - run:
          name: Update System
          command: sudo apt-get update

      - run:
          name: Install SQLite
          command: sudo apt install zlib1g-dev libsqlite3-dev

      - run:
          name: Install PHP extensions
          command: |
            sudo docker-php-ext-install zip pdo_sqlite

      - run:
          name: Setup Laravel environment variables for CircleCI test
          command: cp .env.example .env

      - run: sudo composer self-update

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - vendor

      - run:
          name: Generate Key
          command: |
            cp .env.testing .env
            php artisan key:generate
            php artisan config:cache
            touch ./storage/logs/laravel.log


      - restore_cache:
          keys:
            - node-v4-{{ checksum "package.json" }}
            - node-v4-

      - run:
          name: Install Node dependencies
          command: |
            node --version
            npm --version
            npm install
      - save_cache:
          key: node-v4-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run:
          name: Run Webpack
          command: npm run prod

      - run:
          name: Prepare SQLite Database;
          command: touch ./database/database.sqlite

      - run:
          name: Laravel stuff
          command: php artisan migrate --env=testing --database=sqlite --force

      - run:
          name: Run Unit Tests
          command: |
            mkdir -p ./logs/phpunit
            ./vendor/bin/phpunit -d memory_limit=512M --log-junit logs/phpunit/junit.xml --testdox-html logs/phpunit/testdox.html
